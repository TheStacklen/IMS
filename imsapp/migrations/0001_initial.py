# Generated by Django 5.1.5 on 2025-06-04 07:51

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContributingFactor',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imsapp.role')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.department')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=40)),
                ('contact', models.BigIntegerField(null=True)),
                ('desig_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to='imsapp.designation')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentPOC',
            fields=[
                ('POC_id', models.IntegerField(primary_key=True, serialize=False)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poc', to='imsapp.department')),
                ('employee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dept', to='imsapp.employee')),
            ],
        ),
        migrations.CreateModel(
            name='FollowUpActions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_complete', models.DateField(auto_now_add=True)),
                ('actions_title', models.CharField(max_length=70)),
                ('date_completed', models.DateTimeField(auto_now_add=True)),
                ('responsible_emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ImprovementRecommendations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('action_title', models.CharField(max_length=50)),
                ('action_description', models.CharField(max_length=50)),
                ('responsible_emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.employee')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentTicket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('occurrence_date', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(max_length=50)),
                ('evidence', models.FileField(blank=True, null=True, upload_to='file')),
                ('description', models.CharField(max_length=100)),
                ('potential_severity', models.CharField(max_length=50, null=True)),
                ('likelihood_of_recurrence', models.CharField(max_length=70, null=True)),
                ('risk_level', models.CharField(max_length=100, null=True)),
                ('Assigned_POC', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='imsapp.departmentpoc')),
                ('contributing_factor', models.ManyToManyField(db_table='incidentFactor', to='imsapp.contributingfactor')),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.department')),
                ('followup_actions', models.ManyToManyField(null=True, related_name='follow_actions', through='imsapp.FollowUpActions', to='imsapp.employee')),
                ('improvement_recommendations', models.ManyToManyField(null=True, related_name='improvement_recom', through='imsapp.ImprovementRecommendations', to='imsapp.employee')),
                ('individual_involved', models.ManyToManyField(db_table='IndividualInvolved', related_name='individual_invo', to='imsapp.employee')),
                ('requestor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.employee')),
                ('witnesses', models.ManyToManyField(db_table='Witnesses', related_name='wit', to='imsapp.employee')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField()),
                ('incident_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.incidentticket')),
                ('status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.status')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentEvidence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='file')),
                ('incident_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inci_evidence', to='imsapp.incidentticket')),
            ],
        ),
        migrations.AddField(
            model_name='improvementrecommendations',
            name='incident_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.incidentticket'),
        ),
        migrations.CreateModel(
            name='ImmediateAction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('discription', models.CharField(max_length=80)),
                ('emp_id', models.ManyToManyField(db_table='ImmediateActionEmployee', related_name='iae', to='imsapp.employee')),
                ('incident_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imme_action', to='imsapp.incidentticket')),
            ],
        ),
        migrations.AddField(
            model_name='followupactions',
            name='incident_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.incidentticket'),
        ),
        migrations.CreateModel(
            name='IncidentType',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.department')),
            ],
        ),
        migrations.AddField(
            model_name='incidentticket',
            name='report_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imsapp.incidenttype'),
        ),
        migrations.CreateModel(
            name='StackHolder',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='incidentticket',
            name='incident_status',
            field=models.ManyToManyField(null=True, related_name='inci_status', through='imsapp.IncidentStatus', to='imsapp.status'),
        ),
    ]
